{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "components_app_insights_name": {
      "defaultValue": "tt-app-insights",
      "type": "string"
    }
  },
  "variables": {
    "storage_name": "[concat('ttstorage',uniqueString(resourceGroup().id))]",
    "function_name": "[concat('ttfunction',uniqueString(resourceGroup().id))]",
    "coupons_cosmosdb_name": "[concat('ttcouponsdb',uniqueString(resourceGroup().id))]",
    "shopping_cosmosdb_name": "[concat('ttshoppingdb',uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('components_app_insights_name')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtension"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "name": "[variables('storage_name')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": false
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('function_name')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('function_name')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            }
          ]
        },
        "clientAffinityEnabled": false,
        "reserved": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "name": "[variables('shopping_cosmosdb_name')]",
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "Core (SQL)"
      },
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[concat(variables('shopping_cosmosdb_name'), '-', resourceGroup().location)]",
            "failoverPriority": 0,
            "locationName": "[resourceGroup().location]"
          }
        ],
        "enableMultipleWriteLocations": true,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "dependsOn": []
      }
    },
    {
      "apiVersion": "2015-04-08",
      "kind": "MongoDB",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('coupons_cosmosdb_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[concat(variables('coupons_cosmosdb_name'), '-', resourceGroup().location)]",
            "failoverPriority": 0,
            "locationName": "[resourceGroup().location]"
          }
        ],
        "enableMultipleWriteLocations": true,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "dependsOn": []
      },
      "tags": {
        "defaultExperience": "Azure Cosmos DB for MongoDB API"
      }
    }
  ],
  "outputs": {
    "function": {
      "type": "string",
      "value": "[variables('function_name')]"
    },
    "couponsdb": {
      "type": "string",
      "value": "[variables('coupons_cosmosdb_name')]"
    },
    "shoppingdb": {
      "type": "string",
      "value": "[variables('shopping_cosmosdb_name')]"
    },
    "storage": {
      "type": "string",
      "value": "[variables('storage_name')]"
    }
  }
}
